/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Public;
import generated.tables.records.TotalRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Total extends TableImpl<TotalRecord> {

	private static final long serialVersionUID = 1271760242;

	/**
	 * The reference instance of <code>public.total</code>
	 */
	public static final Total TOTAL = new Total();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TotalRecord> getRecordType() {
		return TotalRecord.class;
	}

	/**
	 * The column <code>public.total.id</code>.
	 */
	public final TableField<TotalRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.total.tag</code>.
	 */
	public final TableField<TotalRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.total.merchant</code>.
	 */
	public final TableField<TotalRecord, String> MERCHANT = createField("merchant", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.total.amount</code>.
	 */
	public final TableField<TotalRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL.precision(12, 2), this, "");

	/**
	 * Create a <code>public.total</code> table reference
	 */
	public Total() {
		this("total", null);
	}

	/**
	 * Create an aliased <code>public.total</code> table reference
	 */
	public Total(String alias) {
		this(alias, TOTAL);
	}

	private Total(String alias, Table<TotalRecord> aliased) {
		this(alias, aliased, null);
	}

	private Total(String alias, Table<TotalRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Total as(String alias) {
		return new Total(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Total rename(String name) {
		return new Total(name, null);
	}
}
